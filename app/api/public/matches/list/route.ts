import { NextRequest, NextResponse } from 'next/server'; import { supabaseAdmin } from '@/lib/supabaseAdmin'
export const runtime='nodejs'
export async function GET(req:NextRequest){ const s=supabaseAdmin(); const sp=new URL(req.url).searchParams; const t=sp.get('tournament_id'); const round=sp.get('round')||'group'; const {data:ms,error}=await s.from('matches').select('id,team1_registration_id,team2_registration_id,round').eq('tournament_id',t).eq('round',round).order('created_at'); if(error) return NextResponse.json({error:error.message},{status:500}); const items=[] as any[]; for(const m of ms||[]){ const {data:r1}=await s.from('registrations').select('team_id').eq('id',m.team1_registration_id).single(); const {data:r2}=await s.from('registrations').select('team_id').eq('id',m.team2_registration_id).single(); const {data:t1}=await s.from('teams').select('player_a,player_b').eq('id',r1?.team_id).single(); const {data:t2}=await s.from('teams').select('player_a,player_b').eq('id',r2?.team_id).single(); const {data:p1a}=await s.from('players').select('last_name').eq('id',t1?.player_a).single(); const {data:p1b}=await s.from('players').select('last_name').eq('id',t1?.player_b).single(); const {data:p2a}=await s.from('players').select('last_name').eq('id',t2?.player_a).single(); const {data:p2b}=await s.from('players').select('last_name').eq('id',t2?.player_b).single(); items.push({id:m.id,label:`${p1a?.last_name??''}/${p1b?.last_name??''} vs ${p2a?.last_name??''}/${p2b?.last_name??''}`}) } return NextResponse.json({items}) }
