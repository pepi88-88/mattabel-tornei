create extension if not exists pgcrypto; create table if not exists players(id uuid primary key default gen_random_uuid(), first_name text, last_name text, gender char(1), is_placeholder boolean default false);
create table if not exists teams(id uuid primary key default gen_random_uuid(), player_a uuid references players(id), player_b uuid references players(id));
create table if not exists tours(id uuid primary key default gen_random_uuid(), name text, season_start int, season_end int, is_active boolean default true);
create table if not exists tournaments(id uuid primary key default gen_random_uuid(), tour_id uuid references tours(id), name text, status text default 'open', multiplier numeric(3,1) default 1.0, start_date date, max_teams int, created_at timestamptz default now());
create table if not exists registrations(id uuid primary key default gen_random_uuid(), tournament_id uuid references tournaments(id) on delete cascade, team_id uuid references teams(id) on delete cascade, order_index int default 9999, partner_status text default 'none', paid_a boolean default false, paid_b boolean default false);
create table if not exists groups(id uuid primary key default gen_random_uuid(), tournament_id uuid references tournaments(id) on delete cascade, label text);
create table if not exists group_registrations(id uuid primary key default gen_random_uuid(), group_id uuid references groups(id) on delete cascade, registration_id uuid references registrations(id) on delete cascade);
create table if not exists matches(id uuid primary key default gen_random_uuid(), tournament_id uuid references tournaments(id) on delete cascade, round text, stage text, group_id uuid references groups(id), team1_registration_id uuid references registrations(id), team2_registration_id uuid references registrations(id), court text, start_time timestamptz, end_time timestamptz, status text default 'pending', score jsonb default '[]'::jsonb, winner_registration_id uuid references registrations(id));
